package com.qualcomm.ftcrobotcontroller.opmodes;


import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.HardwareMap;
import com.qualcomm.robotcore.hardware.Servo;

public class Controller extends OpMode {
    DcMotor Lmotor;
    DcMotor Rmotor;
    DcMotor Llift;
    DcMotor Tape;
    DcMotor Tape2;

    Servo zipL;
    Servo zipR;
    Servo Ricey;
    Servo Aiming;
    Servo Flag;


    @Override
    public void init() {
        Lmotor = hardwareMap.dcMotor.get("left_drive");
        Rmotor = hardwareMap.dcMotor.get("right_drive");
        Llift = hardwareMap.dcMotor.get("Lmb");
        Tape = hardwareMap.dcMotor.get("Tape");
        Tape2 = hardwareMap.dcMotor.get("Tape2");
        //Aiming = hardwareMap.servo.get("Aim");

        Lmotor.setDirection(DcMotor.Direction.REVERSE);
        Llift.setDirection(DcMotor.Direction.REVERSE);
        //zipL.setDirection(Servo.Direction.REVERSE);
        //Measure2.setDirection(DcMotor.Direction.REVERSE);

        zipL = hardwareMap.servo.get("Hikers");
        zipR = hardwareMap.servo.get("Hikers");
        Ricey = hardwareMap.servo.get("Climbers");
        Flag = hardwareMap.servo.get("FlagDrop");
    }


    @Override
    public void loop() {
        float leftY = -gamepad1.left_stick_y;
        float rightY = -gamepad1.right_stick_y;
        float Lifty = -gamepad2.right_stick_y;
       // float ClimberR = gamepad2.right_trigger;
       // float ClimberL = gamepad2.left_trigger;
        float Climbey = gamepad1.right_trigger;
        boolean AimU = gamepad2.dpad_up;
        boolean AimD = gamepad2.dpad_down;


        Lmotor.setPower(leftY);
        Rmotor.setPower(rightY);
        //Rlift.setPower(Lifty*0.25);
        Llift.setPower(Lifty*0.5);





        // If you are holding the left trigger, the servo arm extends out left
        // else keep the servo arm centered
        float zipLeft = 0.0f;

       //This one work Iceman
        if (gamepad2.left_bumper && gamepad2.right_bumper) {
            zipL.setPosition(0.5); }
        else if (gamepad2.left_bumper) {
            zipL.setPosition(0); }
        else if (gamepad2.right_bumper) {
            zipR.setPosition(0.9);
        }
        else {
            zipL.setPosition(0.5);
            zipR.setPosition(0.5);
        }



        float ClimbeyUp = 0.2f;

        if (Math.abs(Climbey) < 0.2) {
            ClimbeyUp = 0.2f; // if the left trigger is pressed on gamepad 1 then drop climbers
        } else {
            ClimbeyUp = 0.6f; // else the dump stays in its starting position

        }

        if (gamepad1.dpad_up && gamepad1.dpad_down) {
            Tape2.setPower(0); }
        else if (gamepad1.dpad_up) {
            Tape2.setPower(0.25); }
        else if (gamepad1.dpad_down) {
            Tape2.setPower(-1.0); }
        else {
            Tape2.setPower(0); }

        telemetry.addData("Lift", Tape2.getCurrentPosition());
        telemetry.addData("Target", Tape2.getTargetPosition());


        // Set power to Tape motor
        if (gamepad1.dpad_up && gamepad2.dpad_down) {
            Tape.setPower(0); }
        else if (gamepad1.dpad_up) {   // When dpad up is pressed extend tape measure
            Tape.setPower(0.25); }
        else if (gamepad1.dpad_down) { // When dpad down is pressed retract tape measure
            Tape.setPower(-1.0); }
        else {
            Tape.setPower(0); }


        // Drops Copper wire to raise flag
        if (gamepad2.a) {                               // If game pad 2s a button is pressed drop wire
            Flag.setPosition(0.8); }
        else {                                          // Else keep servo in base position
            Flag.setPosition(0);
        }





        telemetry.addData("Lift", Tape.getCurrentPosition());
        telemetry.addData("Target", Tape.getTargetPosition());


        Ricey.setPosition(ClimbeyUp);


    }
}
